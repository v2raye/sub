port: 7890
socks-port: 7891
mixed-port: 7892

ipv6: true
mode: rule
log-level: warning
allow-lan: true
unified-delay: true
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]

tun:
  enable: true
  stack: system
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-detect-interface: true
  strict-route: true

dns:
  enable: true
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
# 用于解析 nameserver，fallback 以及其他 DNS 服务器配置的，DNS 服务域
# 只能使用纯 IP 地址，可使用加密 DNS
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
#主要 DNS 配置，影响所有直连，确保使用对大陆解析精准的 DNS   
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
# 专用于节点域名解析的 DNS 服务器    
#  proxy-server-nameserver:
#    - https://dns.alidns.com/dns-query
# 配置查询域名使用的 DNS 服务器
#  nameserver-policy:
#    "rule-set:Private_domain,CN_domain":
#    - https://dns.alidns.com/dns-query
#    "rule-set:Proxy":
#    - https://dns.google/dns-query
 
# url 里填写自己的订阅,名称不能重复
# 锚点 - 节点订阅的参数 [每24小时更新一次订阅节点，每 60 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 86400, health-check: {enable: true, url: 'http://captive.apple.com/generate_204', interval: 600}}
# 锚点 - 节点订阅
proxy-providers: 
  我的节点:
    url: ''
    <<: *NodeParam
    path: './proxy_provider/Providers.yaml'
# =================== 节点筛选规则 ===================
FilterHK: &FilterHK '(?i)(🇭🇰|香港|HK|Hong)'
FilterJP: &FilterJP '(?i)(🇯🇵|日本|东京|大阪|JP|Japan)'
FilterSG: &FilterSG '(?i)(🇸🇬|新加坡|SG|Singapore)'
FilterUS: &FilterUS '(?i)(🇺🇸|美国|US|United States|洛杉矶|硅谷)'
FilterTW: &FilterTW '(?i)(🇹🇼|台湾|TW|Taiwan)'
FilterEU: &FilterEU '(?i)(🇬🇧|UK|英国|🇩🇪|DE|德国|🇫🇷|FR|法国|🇳🇱|NL|荷兰)'
FilterEM: &FilterEM '^(?=.*DlerCloud)(?=.*(🇭🇰|HK|Hong|香港|🇹🇼|TW|Taiwan|台湾|臺灣|台北|🇺🇸|US|United States|美国))'

Smart: &Smart {type: smart, policy-priority: 'DlerCloud:1.5;LinkCube:1;Enet:0.5', uselightgbm: true, collectdata: false, strategy: sticky-sessions, include-all: true}

# =================== 策略组 ===================
proxy-groups:
  - {name: Outside, type: select, proxies: [HK, JP, SG, US, EU, TW, DIRECT]}
  - {name: OpenAI, type: select, proxies: [JP, US]}
  - {name: Apple, type: select, proxies: [HK, JP, SG, US, EU, TW, DIRECT]}
  - {name: Telegram, type: select, proxies: [HK, JP, SG, US, EU, TW]}
  - {name: Microsoft, type: select, proxies: [HK, JP, SG, US, EU, TW, DIRECT]}
  - {name: Google, type: select, proxies: [HK, JP, SG, US, EU, TW]}
  - {name: Emby, type: select, proxies: [EM, DIRECT]}
  - {name: HK, <<: *Smart, filter: *FilterHK}
  - {name: JP, <<: *Smart, filter: *FilterJP}
  - {name: SG, <<: *Smart, filter: *FilterSG}
  - {name: US, <<: *Smart, filter: *FilterUS}
  - {name: TW, <<: *Smart, filter: *FilterTW}
  - {name: EU, <<: *Smart, filter: *FilterEU}
  - {name: EM, <<: *Smart, filter: *FilterEM}
rules:
    - RULE-SET,adblock,REJECT
    - AND,(AND,(DST-PORT,443),(NETWORK,UDP)),(NOT,((RULE-SET,CN_ip))),REJECT
    - OR,((DOMAIN-SUFFIX,micu.hk),(DOMAIN,rfc.uhdnow.com),(DOMAIN,cf.bili.rip),(DOMAIN,emby.as174.de)),Emby
    - RULE-SET,Private_domain,DIRECT
    - RULE-SET,OpenAI,OpenAI
    - RULE-SET,Google_domain,Google
    - RULE-SET,Apple_domain,Apple
    - RULE-SET,Microsoft,Microsoft
    - RULE-SET,Telegram,Telegram
    - RULE-SET,CN_domain,DIRECT
    - RULE-SET,Proxy,Outside
      
    - RULE-SET,Private_ip,DIRECT,no-resolve
    - OR,((IP-ASN,62014),(IP-CIDR,91.108.16.0/22),(IP-CIDR,91.108.56.0/22),(IP-CIDR6,2001:b28:f23f::/48)),Telegram
    - OR,((IP-ASN,44907),(IP-ASN,62041),(IP-CIDR,149.154.160.0/20),(IP-CIDR,91.108.4.0/22),(IP-CIDR,91.108.8.0/22),(IP-CIDR6,2001:67c:4e8::/48),(IP-CIDR6,2001:b28:f23c::/48)),EU
    - OR,((IP-ASN,59930),(IP-ASN,21157),(IP-CIDR,91.108.12.0/22),(IP-CIDR6,2001:b28:f23d::/48)),OpenAI
    - RULE-SET,Google_ip,Google
    - RULE-SET,Apple_ip,Apple
    - RULE-SET,CN_ip,DIRECT
    - MATCH,Outside
rule-anchor:
  ip: &ip {type: http, interval: 43200, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 43200, behavior: domain, format: mrs}
rule-providers:
#域名类
  Private_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/private.mrs"
  adblock:
    <<: *domain
    url: "https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/adblockmihomo.mrs"
  CN_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/cn.mrs"  
  OpenAI:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/openai.mrs"         
  Google_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/google.mrs"
  Telegram:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo-lite/geosite/telegram.mrs"
  Apple_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo-lite/geosite/apple.mrs"
  Microsoft:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/microsoft.mrs"
  Proxy:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/geolocation-!cn.mrs"
#IP类
  Private_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/private.mrs"
  CN_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/cn.mrs"
  Google_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/google.mrs"
  Apple_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo-lite/geoip/apple.mrs"
